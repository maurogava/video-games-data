{"version":3,"sources":["components/table/Sort.module.scss","components/table/Search.module.scss","components/dropdown/Dropdown.module.scss","components/table/Filters.module.scss","components/table/TableHead.module.scss","components/table/TableBody.module.scss","components/table/Table.module.scss","pages/Home.module.scss","components/table/useTable.tsx","utils/utils.ts","components/table/Sort.tsx","components/table/Search.tsx","components/dropdown/Label.tsx","components/dropdown/Item.tsx","components/dropdown/Dropdown.tsx","components/table/Filters.tsx","components/table/TableHead.tsx","components/table/TableBody.tsx","components/table/Table.tsx","pages/Home.tsx"],"names":["module","exports","TableContext","createContext","data","currentSortField","sortFields","actions","search","orderBy","useTableContext","useContext","TableContextProvider","children","rawData","columns","tableData","useMemo","filter","title","hasSort","map","accesor","setTableData","useState","useRef","refData","useCallback","direction","columnName","tempData","compareBy","key","dir","a","b","compareByString","current","sort","value","length","RegExp","test","undefined","providerData","Provider","Sort","className","dirIndex","directions","colName","index","indexOf","handleClick","type","cn","styles","button","onClick","arrow","up","upActive","down","downActive","Search","memo","handleSearch","e","currentTarget","wrapper","htmlFor","id","onChange","Label","Item","Dropdown","isOpened","setIsOpened","useEffect","closeMenu","document","addEventListener","removeEventListener","showMenu","childrenArray","Children","toArray","label","find","child","items","style","container","props","listWrapper","Filters","dropdown","icon","groupTitle","TableHead","thead","th","TableBody","content","reduce","acc","row","api_rate_limit","tr","cell","platform","push","Table","table","fetchGames","fetch","then","res","json","Home","isLoading","error","useQuery","refetchOnWindowFocus","console","log","score","genre","choice","Loading"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,OAAS,qBAAqB,MAAQ,oBAAoB,GAAK,iBAAiB,KAAO,mBAAmB,SAAW,uBAAuB,WAAa,2B,mBCA3KD,EAAOC,QAAU,CAAC,QAAU,0B,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,yBAAyB,YAAc,8BAA8B,SAAW,6B,mBCAnJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,WAAa,4BAA4B,WAAa,4BAA4B,KAAO,wB,mBCAnLD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,GAAK,wB,mBCAlED,EAAOC,QAAU,CAAC,IAAM,uBAAuB,KAAO,wBAAwB,MAAQ,2B,mBCAtFD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,MAAQ,oBAAoB,SAAW,uBAAuB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,uB,8FCmC7K,MAAMC,EAAeC,wBAAuB,CAC1CC,KAAM,GACNC,iBAAkB,GAClBC,WAAY,GACZC,QAAS,CACPC,OAAQ,OACRC,QAAS,UAIAC,EAAkB,IAAMC,qBAAWT,GAQnCU,EAA0C,IAIhD,IAJiD,SACtDC,EACAT,KAAMU,EAFgD,QAGtDC,GACI,EAEJ,MAAMC,EAAYC,mBAChB,IAAMH,EAAQI,QAAO,QAAC,MAAEC,GAAH,SAAeA,MACpC,CAACL,IAIGR,EAAaW,mBACjB,IACEF,EACGG,QAAO,QAAC,QAAEE,GAAH,SAAiBA,KACxBC,KAAI,QAAC,MAAEF,EAAF,QAASG,GAAV,QAAyB,CAAEH,QAAOG,eAC3C,CAACP,KAIIX,EAAMmB,GAAgBC,mBAASR,GAEhCX,EAAmBoB,iBAAyB,IAE5CC,EAAUD,mBAGVhB,EAAUkB,uBACd,CAACC,EAAWC,KACV,IAAIC,EACJ,MAAMC,EAEgC,kBAA7Bf,EAAU,GAAGa,ICtFzBG,EDuF0BH,ECvFbI,EDuFyBL,ECtFvC,CAACM,EAA2BC,IAClB,QAARF,EAAgBC,EAAEF,GAAOG,EAAEH,GAAOG,EAAEH,GAAOE,EAAEF,IAG/C,EAACA,EAAaC,IACd,CAACC,EAA2BC,IACtBD,EAAEF,GAAOG,EAAEH,GACE,QAARC,EAAgB,GAAK,EAE1BC,EAAEF,GAAOG,EAAEH,GACE,QAARC,GAAiB,EAAI,EAGvB,ED0ECG,CAAgBP,EAAYD,GCxFtC,IAACI,EAAaC,ED2FV,MAAM7B,EAAOsB,EAAQW,QAAU,IAAIX,EAAQW,SAAW,IAAIrB,GAE1DX,EAAiBgC,QAAU,CAAER,aAAYD,aAEvB,QAAdA,GAAqC,SAAdA,EAGzBE,EAAW1B,EAAKkC,KAAKP,IAGrBD,EAAW1B,EACXC,EAAiBgC,QAAU,IAG7Bd,EAAaO,KAEf,CAACd,IAIGR,EAASmB,uBACZY,IACC,IAAIT,EAECS,EAAMC,QAMTV,EAAWd,EAAUE,QACnB,QAAC,MAAEC,GAAH,QACmB,kBAAVA,GAAsB,IAAIsB,OAAOF,EAAO,KAAKG,KAAKvB,MAG7DO,EAAQW,QAAUP,IATlBA,EAAW,IAAId,GACfU,EAAQW,aAAUM,GAYpB,MAAM,UAAEf,EAAF,WAAaC,GAAexB,EAAiBgC,QAC/CT,GAAaC,GAA4B,SAAdD,EAE7BnB,EAAQmB,EAAWC,GAEnBN,EAAaO,KAGjB,CAACrB,EAASO,IAGN4B,EAAe3B,mBACnB,MACEb,OACAC,iBAAkBA,EAAiBgC,QACnC/B,aACAC,QAAS,CACPC,SACAC,cAGJ,CAACL,EAAMK,EAASD,EAAQF,IAG1B,OACE,cAACJ,EAAa2C,SAAd,CAAuBN,MAAOK,EAA9B,SACG/B,K,6BE7FQiC,MArDgB,IAA+C,IAA9C,SAAEjC,EAAF,WAAYgB,EAAZ,UAAwBkB,EAAY,IAAS,EAE3E,MAAMC,EAAWvB,iBAAO,GAElBwB,EAAahC,mBAAqB,IAAM,CAAC,OAAQ,MAAO,SAAS,KAGrEZ,kBAAoBwB,WAAYqB,EAAd,UAAuBtB,GACzCrB,SAAS,QAAEE,IACTC,IAGEyC,EAAQvB,GAAaqB,EAAWG,QAAQxB,GAC1CuB,GAASA,GAAS,IACpBH,EAASX,QAAUc,GAIjBtB,IAAeqB,IACjBF,EAASX,QAAU,GAGrB,MAAMgB,EAAc1B,uBAAY,KAE9BqB,EAASX,SAAWW,EAASX,QAAU,GAAK,EAE5C5B,EAAQwC,EAAWD,EAASX,SAAUR,KACrC,CAACA,EAAYoB,EAAYxC,IAGtBwB,EAAMgB,EAAWD,EAASX,SAEhC,OACE,yBACEiB,KAAK,SACLP,UAAWQ,IAAGC,IAAOC,OAAQV,GAC7BW,QAASL,EAHX,UAKGxC,EACD,sBACEkC,UAAWQ,IAAGC,IAAOG,MAAOH,IAAOI,GAAI,CACrC,CAACJ,IAAOK,UAAmB,SAAR5B,GAAkBJ,IAAeqB,MAGxD,sBACEH,UAAWQ,IAAGC,IAAOG,MAAOH,IAAOM,KAAM,CACvC,CAACN,IAAOO,YAAqB,QAAR9B,GAAiBJ,IAAeqB,U,iBC7BhDc,MAlBiBC,gBAAK,IAAoB,IAAnB,UAAElB,GAAgB,EACtD,MACExC,SAAS,OAAEC,IACTE,IAEEwD,EAAevC,uBAClBwC,GAAqC3D,EAAO2D,EAAEC,cAAc7B,QAC7D,CAAC/B,IAGH,OACE,sBAAKuC,UAAWQ,IAAGC,IAAOa,QAAStB,GAAnC,UACE,uBAAOuB,QAAQ,SAAf,qBACA,uBAAOC,GAAG,SAASjB,KAAK,OAAOkB,SAAUN,UCfhCO,MAFe,QAAC,SAAE5D,GAAH,SAAkB,mCAAGA,KCEpC6D,MAFa,QAAC,SAAE7D,GAAH,SAAkB,mCAAGA,K,iBCkBjD,MAAM8D,EAAwD,IAGvD,IAAD,MAHyD,SAC7D9D,EAD6D,UAE7DkC,EAAY,IACR,EACJ,MAAO6B,EAAUC,GAAerD,oBAAS,GAEzCsD,qBAAU,KAER,IAAKF,EACH,OAGF,MAAMG,EAAY,IAAMF,GAAY,GAIpC,OAFAG,SAASC,iBAAiB,QAASF,GAE5B,IAAMC,SAASE,oBAAoB,QAASH,KAClD,CAACH,IAEJ,MAAMO,EAAWxD,uBAAY,IAAMkD,GAAY,IAAO,IAEhDO,EAAgBC,WAASC,QAAQzE,GACjC0E,EAAQH,EAAcI,MAAMC,IAAe,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOnC,QAASmB,IACtDiB,EAAQN,EAAclE,QAAQuE,IAAe,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOnC,QAASoB,IAE9D,OACE,sBAAK3B,UAAWQ,IAAGoC,IAAMC,UAAW7C,GAApC,UACE,wBACEO,KAAK,SACLP,UAAWQ,IAAGoC,IAAMlC,OAAP,OAAe8B,QAAf,IAAeA,GAAf,UAAeA,EAAOM,aAAtB,aAAe,EAAc9C,WAC1CW,QAASyB,EAHX,SAKGI,IAEH,qBAAKxC,UAAWQ,IAAGoC,IAAMG,YAAalB,GAAYe,IAAMf,UAAxD,SACGc,QAMTf,EAASF,MAAQA,EACjBE,EAASD,KAAOA,EAEDC,Q,iBC3Df,MAAQF,MAAF,EAASC,KAAT,GAAkBC,EAiCToB,MA/BK,KAClB,MAAM,WAAEzF,GAAeI,IAEvB,IAAKJ,EAAWkC,OACd,OAAO,KAGT,MAAMkD,EAAQpF,EAAWe,KAAI,IAAyB,IAAxB,MAAEF,EAAF,QAASG,GAAc,EACnD,OACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAMO,WAAYP,EAAlB,SAA4BH,KADnBG,MAMf,OACE,sBAAKyB,UAAWS,IAAOa,QAAvB,UACE,eAAC,EAAD,CAAUtB,UAAWS,IAAOwC,SAA5B,UACE,cAAC,EAAD,UACE,cAAC,IAAD,CAAQjD,UAAWS,IAAOyC,SAE5B,cAAC,EAAD,UACE,qBAAKlD,UAAWS,IAAO0C,WAAvB,yBAEDR,KAEH,cAAC,EAAD,Q,iBCVSS,MAfuB,IAAkB,IAAjB,QAAEpF,GAAc,EACrD,MAAMqF,EAAQrF,EAAQM,KAAI,QAAC,MAAEF,EAAF,QAASG,EAAT,UAAkByB,EAAlB,QAA6B3B,GAA9B,SACxB,qBAAkB2B,UAAWQ,IAAGC,IAAO6C,GAAItD,GAA3C,UACG5B,EACAC,GAAW,cAAC,EAAD,CAAMS,WAAYP,MAFvBA,MAMX,OACE,gCACE,6BAAK8E,O,iBCyBIE,MA5BuB,IAAkB,IAAjB,QAAEvF,GAAc,EACjDwF,EAAyC,iDAC7C,MAAM,KAAEnG,GAASM,IAuBjB,OArBA,OAAIN,QAAJ,IAAIA,OAAJ,EAAIA,EAAMoC,UAER+D,EAAUnG,EAAKoG,QAAO,CAACC,EAAKC,KAC1B,QAA2B/D,IAAvB+D,EAAIC,eAA8B,CACpC,MAAMC,EACJ,oBAAwC7D,UAAWS,IAAOkD,IAA1D,SACG3F,EAAQM,KAAI,QAAC,MAAEF,EAAF,QAASG,EAAT,UAAkByB,GAAnB,SACX,qBAAkBA,UAAWQ,IAAGC,IAAOqD,KAAM9D,GAA7C,UACE,yBAAQA,UAAWS,IAAOrC,MAA1B,UAAkCA,EAAlC,OACCuF,EAAIpF,KAFEA,OAFb,UAAYoF,EAAIvF,OAAhB,OAAwBuF,EAAII,WAS9BL,EAAIM,KAAKH,GAGX,OAAOH,IACN,KAGE,gCAAQF,K,iBCZFS,MAfe,IAAmC,IAAlC,QAAEjG,EAAF,KAAWX,EAAX,UAAiB2C,GAAgB,EAE9D,MAAM4C,EAAQ,CAAE,YAAa5E,EAAQyB,QAErC,OACE,eAAC5B,EAAD,CAAsBG,QAASA,EAASX,KAAMA,EAA9C,UACE,cAAC,EAAD,IACA,wBAAO2C,UAAWQ,IAAGC,IAAOyD,MAAOlE,GAAY4C,MAAOA,EAAtD,UACE,cAAC,EAAD,CAAW5E,QAASA,IACpB,cAAC,EAAD,CAAWA,QAASA,W,iBCX5B,MAAMmG,EAAa,IACjBC,MACE,iFACAC,MAAMC,GAAQA,EAAIC,SAsDPC,UApDE,KACf,MAAM,UAAEC,EAAF,MAAaC,EAAb,KAAoBrH,GAASsH,mBACjC,YACAR,EACA,CAAES,sBAAsB,IAG1BC,QAAQC,IAAI,QAEZ,MAAM9G,EAAUE,mBACd,IAAM,CACJ,CACEE,MAAO,QACPG,QAAS,QACTyB,UAAWS,IAAOrC,OAEpB,CACEA,MAAO,WACPG,QAAS,WACTyB,UAAWS,IAAOsD,UAEpB,CACE3F,MAAO,QACPG,QAAS,QACTyB,UAAWS,IAAOsE,MAClB1G,SAAS,GAEX,CACED,MAAO,QACPG,QAAS,QACTyB,UAAWS,IAAOuE,OAEpB,CACE5G,MAAO,kBACPG,QAAS,iBACTyB,UAAWS,IAAOwE,UAGtB,IAGF,OAAIR,EACK,cAACS,EAAA,EAAD,IAGLR,IAAUrH,EACL,sDAGF,cAAC,EAAD,CAAOW,QAASA,EAASX,KAAMA,EAAM2C,UAAWS,IAAOyD","file":"static/js/3.7c4c5669.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Sort_button__1EEZx\",\"arrow\":\"Sort_arrow__3eabM\",\"up\":\"Sort_up__3FQGM\",\"down\":\"Sort_down__3zF2_\",\"upActive\":\"Sort_upActive__1laXk\",\"downActive\":\"Sort_downActive__1MsZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__njBju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dropdown_container__2JzP-\",\"button\":\"Dropdown_button__3vW7v\",\"listWrapper\":\"Dropdown_listWrapper__2n2jZ\",\"isOpened\":\"Dropdown_isOpened__Apnh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filters_wrapper__2-ZBO\",\"dropdown\":\"Filters_dropdown__34cCf\",\"groupTitle\":\"Filters_groupTitle__iFPDl\",\"orderByBtn\":\"Filters_orderByBtn__3ISuj\",\"icon\":\"Filters_icon__1Xi_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withButton\":\"TableHead_withButton__ho9km\",\"th\":\"TableHead_th__3PI0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"TableBody_row__12E4g\",\"cell\":\"TableBody_cell__1DaWe\",\"title\":\"TableBody_title__eHiHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3qmb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Home_table__2Y52P\",\"title\":\"Home_title__376vd\",\"platform\":\"Home_platform__SWyfp\",\"score\":\"Home_score__3Usls\",\"genre\":\"Home_genre__3YPM8\",\"choice\":\"Home_choice__2tMbU\"};","import {\n  createContext,\n  useContext,\n  useState,\n  FC,\n  useMemo,\n  useCallback,\n  useRef,\n} from 'react'\nimport { compareByNumbers, compareByString } from 'utils/utils'\nimport { TableData } from 'components/table/Table'\nimport { Columns } from 'components/table/TableBody'\n\nexport type Direction = 'none' | 'asc' | 'desc'\n\ntype CurrentSortField = {\n  columnName?: string\n  direction?: Direction\n}\n\ntype SortField = {\n  title: string\n  accesor: string\n}\n\ntype Context = {\n  data: TableData\n  currentSortField: CurrentSortField\n  sortFields: SortField[]\n  actions: {\n    search: (value: string) => void\n    orderBy: (direction: Direction, columnName: string) => void\n  }\n}\n\n// Context with defaults\nconst TableContext = createContext<Context>({\n  data: [],\n  currentSortField: {},\n  sortFields: [],\n  actions: {\n    search: () => {},\n    orderBy: () => {},\n  },\n})\n\nexport const useTableContext = () => useContext(TableContext)\n\ntype ProviderProps = {\n  data: TableData\n  columns: Columns[]\n}\n\n// Context Provider\nexport const TableContextProvider: FC<ProviderProps> = ({\n  children,\n  data: rawData,\n  columns,\n}) => {\n  // Data used to build the table\n  const tableData = useMemo(\n    () => rawData.filter(({ title }) => title),\n    [rawData]\n  )\n\n  // Getting all fields that have the sort activated\n  const sortFields = useMemo(\n    () =>\n      columns\n        .filter(({ hasSort }) => hasSort)\n        .map(({ title, accesor }) => ({ title, accesor })),\n    [columns]\n  )\n\n  // Data shown in the table\n  const [data, setTableData] = useState(tableData)\n  // Info about the current sort field\n  const currentSortField = useRef<CurrentSortField>({})\n  // refData stores filtered data so is more perfomant to make the sorting\n  const refData = useRef<TableData | undefined>()\n\n  // Method to Sorting a column\n  const orderBy = useCallback(\n    (direction, columnName) => {\n      let tempData\n      const compareBy =\n        // Checking if we are sorting a number or a string and returning the corresponding method according to that\n        typeof tableData[0][columnName] === 'number'\n          ? compareByNumbers(columnName, direction)\n          : compareByString(columnName, direction)\n\n      // Using refData for better performance if available\n      const data = refData.current ? [...refData.current] : [...tableData]\n      // Store the current sorted field\n      currentSortField.current = { columnName, direction }\n\n      if (direction === 'asc' || direction === 'desc') {\n        // Sorting the data\n        // @ts-ignore: Unreachable code error\n        tempData = data.sort(compareBy)\n      } else {\n        // Reset the sorting using the default data\n        tempData = data\n        currentSortField.current = {}\n      }\n\n      setTableData(tempData)\n    },\n    [tableData]\n  )\n\n  // Method to Filter the data based in the search input\n  const search = useCallback(\n    (value) => {\n      let tempData\n\n      if (!value.length) {\n        // If the input is empty reset the data\n        tempData = [...tableData]\n        refData.current = undefined\n      } else {\n        // Filtering based the input value. This method is case insensitive\n        tempData = tableData.filter(\n          ({ title }) =>\n            typeof title === 'string' && new RegExp(value, 'i').test(title)\n        )\n        // refData is set for improved performance when sorting\n        refData.current = tempData\n      }\n\n      // Get the current sort data if available\n      const { direction, columnName } = currentSortField.current\n      if (direction && columnName && direction !== 'none') {\n        // Sorting the data if there is a sort already applied\n        orderBy(direction, columnName)\n      } else {\n        setTableData(tempData)\n      }\n    },\n    [orderBy, tableData]\n  )\n\n  const providerData = useMemo(\n    () => ({\n      data,\n      currentSortField: currentSortField.current,\n      sortFields,\n      actions: {\n        search,\n        orderBy,\n      },\n    }),\n    [data, orderBy, search, sortFields]\n  )\n\n  return (\n    <TableContext.Provider value={providerData}>\n      {children}\n    </TableContext.Provider>\n  )\n}\n","export const compareByNumbers =\n  (key: string, dir: string) =>\n  (a: Record<string, number>, b: Record<string, number>) =>\n    dir === 'asc' ? a[key] - b[key] : b[key] - a[key]\n\nexport const compareByString =\n  (key: string, dir: string) =>\n  (a: Record<string, string>, b: Record<string, string>) => {\n    if (a[key] > b[key]) {\n      return dir === 'asc' ? 1 : -1\n    }\n    if (a[key] < b[key]) {\n      return dir === 'asc' ? -1 : 1\n    }\n\n    return 0\n  }\n","import { FC, useCallback, useMemo, useRef } from 'react'\nimport cn from 'classnames'\nimport { useTableContext, Direction } from 'components/table/useTable'\n\nimport styles from './Sort.module.scss'\n\ntype LoadingProps = {\n  columnName: string\n  className?: string\n}\n\nconst Sort: FC<LoadingProps> = ({ children, columnName, className = '' }) => {\n  // Used a useRef instead a useState to prevent an extra re-render\n  const dirIndex = useRef(0)\n  // Posible directions of sorting\n  const directions = useMemo<Direction[]>(() => ['none', 'asc', 'desc'], [])\n\n  const {\n    currentSortField: { columnName: colName, direction },\n    actions: { orderBy },\n  } = useTableContext()\n\n  // Set the direction if it is available\n  const index = direction && directions.indexOf(direction)\n  if (index && index > -1) {\n    dirIndex.current = index\n  }\n\n  // Reset sort direction\n  if (columnName !== colName) {\n    dirIndex.current = 0\n  }\n\n  const handleClick = useCallback(() => {\n    // Using an incremental counter with the module operator to calculate the next direction\n    dirIndex.current = (dirIndex.current + 1) % 3\n    // Calling the orderBy method to excecute the sorting\n    orderBy(directions[dirIndex.current], columnName)\n  }, [columnName, directions, orderBy])\n\n  // Current direction\n  const dir = directions[dirIndex.current]\n\n  return (\n    <button\n      type=\"button\"\n      className={cn(styles.button, className)}\n      onClick={handleClick}\n    >\n      {children}\n      <span\n        className={cn(styles.arrow, styles.up, {\n          [styles.upActive]: dir === 'desc' && columnName === colName,\n        })}\n      ></span>\n      <span\n        className={cn(styles.arrow, styles.down, {\n          [styles.downActive]: dir === 'asc' && columnName === colName,\n        })}\n      ></span>\n    </button>\n  )\n}\n\nexport default Sort\n","import { FC, ChangeEvent, useCallback, memo } from 'react'\nimport cn from 'classnames'\nimport { useTableContext } from 'components/table/useTable'\n\nimport styles from './Search.module.scss'\n\ntype SearchProps = {\n  className?: string\n}\n\nconst Search: FC<SearchProps> = memo(({ className }) => {\n  const {\n    actions: { search },\n  } = useTableContext()\n\n  const handleSearch = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => search(e.currentTarget.value),\n    [search]\n  )\n\n  return (\n    <div className={cn(styles.wrapper, className)}>\n      <label htmlFor=\"search\">Search:</label>\n      <input id=\"search\" type=\"text\" onChange={handleSearch} />\n    </div>\n  )\n})\n\nexport default Search\n","import { FC, ReactNode } from 'react'\n\nexport interface LabelProps {\n  children: ReactNode\n}\n\nconst Label: FC<LabelProps> = ({ children }) => <>{children}</>\n\nexport default Label\n","import { FC, ReactNode } from 'react'\n\nexport interface ItemProps {\n  children: ReactNode\n}\n\nconst Item: FC<ItemProps> = ({ children }) => <>{children}</>\n\nexport default Item\n","import {\n  FC,\n  Children,\n  useState,\n  useEffect,\n  ReactElement,\n  useCallback,\n} from 'react'\nimport cn from 'classnames'\nimport Label, { LabelProps } from 'components/dropdown/Label'\nimport Item, { ItemProps } from 'components/dropdown/Item'\n\nimport style from './Dropdown.module.scss'\n\ninterface DropdowProps {\n  className?: string\n}\n\ninterface DropdownCompositionProps {\n  Label: FC<LabelProps>\n  Item: FC<ItemProps>\n}\n\n// Dropdown component using react compound components pattern\nconst Dropdown: FC<DropdowProps> & DropdownCompositionProps = ({\n  children,\n  className = '',\n}) => {\n  const [isOpened, setIsOpened] = useState(false)\n\n  useEffect(() => {\n    // We just want to execute this effect if `isOpened = true`.\n    if (!isOpened) {\n      return\n    }\n\n    const closeMenu = () => setIsOpened(false)\n\n    document.addEventListener('click', closeMenu)\n    // eslint-disable-next-line consistent-return\n    return () => document.removeEventListener('click', closeMenu)\n  }, [isOpened])\n\n  const showMenu = useCallback(() => setIsOpened(true), [])\n\n  const childrenArray = Children.toArray(children) as ReactElement[]\n  const label = childrenArray.find((child) => child?.type === Label)\n  const items = childrenArray.filter((child) => child?.type === Item)\n\n  return (\n    <div className={cn(style.container, className)}>\n      <button\n        type=\"button\"\n        className={cn(style.button, label?.props?.className)}\n        onClick={showMenu}\n      >\n        {label}\n      </button>\n      <div className={cn(style.listWrapper, isOpened && style.isOpened)}>\n        {items}\n      </div>\n    </div>\n  )\n}\n\nDropdown.Label = Label\nDropdown.Item = Item\n\nexport default Dropdown\n","import { FC } from 'react'\nimport { FaBars } from 'react-icons/fa'\nimport { useTableContext } from 'components/table/useTable'\nimport Sort from 'components/table/Sort'\nimport Search from 'components/table/Search'\nimport Dropdown from 'components/dropdown/Dropdown'\n\nimport styles from './Filters.module.scss'\n\nconst { Label, Item } = Dropdown\n\nconst Filters: FC = () => {\n  const { sortFields } = useTableContext()\n\n  if (!sortFields.length) {\n    return null\n  }\n\n  const items = sortFields.map(({ title, accesor }) => {\n    return (\n      <Item key={accesor}>\n        <Sort columnName={accesor}>{title}</Sort>\n      </Item>\n    )\n  })\n\n  return (\n    <div className={styles.wrapper}>\n      <Dropdown className={styles.dropdown}>\n        <Label>\n          <FaBars className={styles.icon} />\n        </Label>\n        <Item>\n          <div className={styles.groupTitle}>Order By:</div>\n        </Item>\n        {items}\n      </Dropdown>\n      <Search />\n    </div>\n  )\n}\n\nexport default Filters\n","import { FC } from 'react'\nimport cn from 'classnames'\n\nimport { Columns } from 'components/table/TableBody'\nimport Sort from 'components/table/Sort'\n\nimport styles from './TableHead.module.scss'\n\ntype TableHeadProps = {\n  columns: Columns[]\n}\n\nconst TableHead: FC<TableHeadProps> = ({ columns }) => {\n  const thead = columns.map(({ title, accesor, className, hasSort }) => (\n    <th key={accesor} className={cn(styles.th, className)}>\n      {title}\n      {hasSort && <Sort columnName={accesor} />}\n    </th>\n  ))\n\n  return (\n    <thead>\n      <tr>{thead}</tr>\n    </thead>\n  )\n}\n\nexport default TableHead\n","import { FC, ReactElement } from 'react'\nimport cn from 'classnames'\nimport { useTableContext } from 'components/table/useTable'\n\nimport styles from './TableBody.module.scss'\n\nexport type Columns = {\n  title: string\n  accesor: string\n  className?: string\n  hasSort?: boolean\n}\n\nexport type TableData = Record<string, string | number>[]\n\ntype TableBodyProps = {\n  columns: Columns[]\n}\n\nconst TableBody: FC<TableBodyProps> = ({ columns }) => {\n  let content: ReactElement | ReactElement[] = <p>There is no data</p>\n  const { data } = useTableContext()\n\n  if (data?.length) {\n    // Used reduce to prevent two iterations using \"filter\" and then \"map\"\n    content = data.reduce((acc, row) => {\n      if (row.api_rate_limit === undefined) {\n        const tr = (\n          <tr key={`${row.title}${row.platform}`} className={styles.row}>\n            {columns.map(({ title, accesor, className }) => (\n              <td key={accesor} className={cn(styles.cell, className)}>\n                <strong className={styles.title}>{title}:</strong>\n                {row[accesor]}\n              </td>\n            ))}\n          </tr>\n        )\n        acc.push(tr)\n      }\n\n      return acc\n    }, [] as ReactElement[])\n  }\n\n  return <tbody>{content}</tbody>\n}\n\nexport default TableBody\n","import { FC, CSSProperties } from 'react'\nimport cn from 'classnames'\nimport { TableContextProvider } from 'components/table/useTable'\nimport Filters from 'components/table/Filters'\nimport TableHead from 'components/table/TableHead'\nimport TableBody, { Columns } from 'components/table/TableBody'\n\nimport styles from './Table.module.scss'\n\nexport type TableData = Record<string, string | number>[]\n\ntype TableProps = {\n  columns: Columns[]\n  data: TableData\n  className?: string\n}\n\nconst Table: FC<TableProps> = ({ columns, data, className }) => {\n  // This CSS custom prop is needed to create the dynamic column table\n  const style = { '--columns': columns.length } as CSSProperties\n\n  return (\n    <TableContextProvider columns={columns} data={data}>\n      <Filters />\n      <table className={cn(styles.table, className)} style={style}>\n        <TableHead columns={columns} />\n        <TableBody columns={columns} />\n      </table>\n    </TableContextProvider>\n  )\n}\n\nexport default Table\n","import { FC, useMemo } from 'react'\nimport { useQuery } from 'react-query'\nimport Loading from 'components/Loading'\nimport Table from 'components/table/Table'\n\nimport styles from './Home.module.scss'\n\ntype Games = {\n  title: string\n  platform: string\n  score: number\n  genre: string\n  editors_choice: string\n}\n\nconst fetchGames = () =>\n  fetch(\n    'https://s3-ap-southeast-1.amazonaws.com/he-public-data/gamesarena274f2bf.json'\n  ).then((res) => res.json())\n\nconst Home: FC = () => {\n  const { isLoading, error, data } = useQuery<Games[], Error>(\n    'gamesdata',\n    fetchGames,\n    { refetchOnWindowFocus: false }\n  )\n\n  console.log('Home')\n\n  const columns = useMemo(\n    () => [\n      {\n        title: 'Title',\n        accesor: 'title',\n        className: styles.title,\n      },\n      {\n        title: 'Platform',\n        accesor: 'platform',\n        className: styles.platform,\n      },\n      {\n        title: 'Score',\n        accesor: 'score',\n        className: styles.score,\n        hasSort: true,\n      },\n      {\n        title: 'Genre',\n        accesor: 'genre',\n        className: styles.genre,\n      },\n      {\n        title: \"Editor's choice\",\n        accesor: 'editors_choice',\n        className: styles.choice,\n      },\n    ],\n    []\n  )\n\n  if (isLoading) {\n    return <Loading />\n  }\n\n  if (error || !data) {\n    return <p>An error has occurred</p>\n  }\n\n  return <Table columns={columns} data={data} className={styles.table} />\n}\n\nexport default Home\n"],"sourceRoot":""}